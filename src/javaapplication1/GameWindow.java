/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.SwingUtilities;

/**
 *
 * @author BalaH-RiG
 */

public class GameWindow extends javax.swing.JFrame implements KeyListener, FocusListener{
	public static FormattedInputBox[][] textFields;
	static boolean timer = false;
	static boolean started = false;
	static ArrayList<Winners> winnerList = new ArrayList<Winners>();
	static int[][] data;
	static int lifesRemaining = 3;
	static String name = "";
	static long timePassedInSeconds;
	static long savedTime = 0;
	static boolean gameWon = false;
	static boolean checked = false;

	private static int activeRow=0, activeCol=0; // currently focused textField
	//	static final Color selectionColor = new Color(220,220,220);


	/**
	 * Creates new form gameWindow
	 */
	public GameWindow() {
		try {
			Winners.writeArray();
		} catch (IOException ex) {
			Logger.getLogger(GameWindow.class.getName()).log(Level.SEVERE, null, ex);
		}
		initComponents();
		jPanel3.setVisible(false);
		textFields = new FormattedInputBox[NewGameInput.N][NewGameInput.N];
		for (int i = 0; i < NewGameInput.N; i++)	
			for (int j = 0; j < NewGameInput.N; j++){
				textFields[i][j] = new FormattedInputBox(NewGameInput.N,i,j);
				FormattedInputBox formattedInputBoxLocal = textFields[i][j];
				formattedInputBoxLocal.setEditable(false);
				jPanel1.add(textFields[i][j]);
			}

		initializeIcon();


	}
	private void initializeIcon(){
		this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("cube1.png")));
	}
	public static void startStopwatch() {
		class StopWatch extends Thread{

			public void run() {
				long startTime = System.currentTimeMillis();
				timer = true;
				try{
					while(timer){
						timePassedInSeconds = (System.currentTimeMillis()-startTime)/1000;
						long totalTime = savedTime + timePassedInSeconds;
						long sec = totalTime;
						long hours = sec / 3600;
						long remainder = sec - hours * 3600;
						long mins = remainder / 60;
						remainder -= mins * 60;
						long secs = remainder;

						jLabel3.setText(hours+"h:"+mins+"m:"+secs+"s");

						Thread.sleep(1000);
					}
				}
				catch(InterruptedException e){System.out.println("Main thread interrupted");}
			}
		}

		StopWatch sw = new StopWatch();
		sw.start();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		jPanel3 = new javax.swing.JPanel();
		jLabel6 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		jLabel9 = new javax.swing.JLabel();
		jMenuBar1 = new javax.swing.JMenuBar();
		jMenu2 = new javax.swing.JMenu();
		jMenuItem2 = new javax.swing.JMenuItem();
		jMenuItem3 = new javax.swing.JMenuItem();
		jMenu1 = new javax.swing.JMenu();
		jMenuItem4 = new javax.swing.JMenuItem();
		jMenuItem5 = new javax.swing.JMenuItem();
		jMenuItem6 = new javax.swing.JMenuItem();
		jMenuItem7 = new javax.swing.JMenuItem();
		jMenu3 = new javax.swing.JMenu();
		jMenuItem1 = new javax.swing.JMenuItem();
		jMenuItem8 = new javax.swing.JMenuItem();

		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		setTitle("Magic Square Game");
		setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
		setResizable(false);
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				GameWindow.this.windowClosing(evt);
			}
		});

		jPanel1.setLayout(new java.awt.GridLayout(3, 3));
		jPanel1.setLayout( new java.awt.GridLayout(javaapplication1.NewGameInput.N, javaapplication1.NewGameInput.N) );

		jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Timer_52px.png"))); // NOI18N

		jLabel3.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
		jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel3.setText("0h:0m:0s");

		jLabel2.setFont(new java.awt.Font("OCR A Extended", 0, 36)); // NOI18N
		jLabel2.setForeground(new java.awt.Color(102, 102, 102));
		jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel2.setText("Timer");

		jButton1.setFont(new java.awt.Font("OCR A Extended", 0, 32)); // NOI18N
		jButton1.setForeground(new java.awt.Color(102, 102, 102));
		jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Finish_Flag_32px.png"))); // NOI18N
		jButton1.setText("Check");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setFont(new java.awt.Font("OCR A Extended", 0, 32)); // NOI18N
		jButton2.setForeground(new java.awt.Color(102, 102, 102));
		jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Start_32px.png"))); // NOI18N
		jButton2.setText("Start");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jLabel4.setFont(new java.awt.Font("Tw Cen MT", 0, 42)); // NOI18N
		jLabel4.setForeground(new java.awt.Color(153, 153, 153));
		jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel4.setText("Status:");

		jLabel5.setFont(new java.awt.Font("DialogInput", 0, 16)); // NOI18N
		jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel5.setText(" ");

		jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png"))); // NOI18N

		jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png"))); // NOI18N

		jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png"))); // NOI18N

		jLabel9.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
		jLabel9.setForeground(new java.awt.Color(102, 102, 102));
		jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel9.setText("Lifes:");

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(
				jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel6)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jLabel7)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jLabel8)
						.addGap(26, 26, 26))
				.addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				);
		jPanel3Layout.setVerticalGroup(
				jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
						.addComponent(jLabel9)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jLabel6)
								.addComponent(jLabel7)
								.addComponent(jLabel8))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(
				jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
						.addGap(0, 0, Short.MAX_VALUE)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(20, 20, 20))
				);
		jPanel2Layout.setVerticalGroup(
				jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
						.addGap(4, 4, 4)
						.addComponent(jLabel2)
						.addGap(18, 18, 18)
						.addComponent(jLabel1)
						.addGap(1, 1, 1)
						.addComponent(jLabel3)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel2Layout.createSequentialGroup()
										.addGap(1, 1, 1)
										.addComponent(jLabel4)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addGroup(jPanel2Layout.createSequentialGroup()
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jLabel5)
										.addGap(5, 5, 5)))
						.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18)
						.addComponent(jButton2)
						.addGap(18, 18, 18)
						.addComponent(jButton1)
						.addGap(37, 37, 37))
				);

		jMenu2.setText("Game");

		jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Game_Controller_32px_1.png"))); // NOI18N
		jMenuItem2.setText("New Game");
		jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem2ActionPerformed(evt);
			}
		});
		jMenu2.add(jMenuItem2);

		jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Leaderboard_32px.png"))); // NOI18N
		jMenuItem3.setText("Leaderboard");
		jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem3ActionPerformed(evt);
			}
		});
		jMenu2.add(jMenuItem3);

		jMenuBar1.add(jMenu2);

		jMenu1.setText("Themes");

		jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Operating_System_32px_2.png"))); // NOI18N
		jMenuItem4.setText("Operating System");
		jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem4ActionPerformed(evt);
			}
		});
		jMenu1.add(jMenuItem4);

		jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Java_32px.png"))); // NOI18N
		jMenuItem5.setText("Java");
		jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem5ActionPerformed(evt);
			}
		});
		jMenu1.add(jMenuItem5);

		jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Color_Dropper_32px.png"))); // NOI18N
		jMenuItem6.setText("Change Color");
		jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem6ActionPerformed(evt);
			}
		});
		jMenu1.add(jMenuItem6);

		jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Settings_Backup_Restore_32px.png"))); // NOI18N
		jMenuItem7.setText("Restore Default");
		jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem7ActionPerformed(evt);
			}
		});
		jMenu1.add(jMenuItem7);

		jMenuBar1.add(jMenu1);

		jMenu3.setText("Help");

		jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Help_32px.png"))); // NOI18N
		jMenuItem1.setText("Help Contents");
		jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem1ActionPerformed(evt);
			}
		});
		jMenu3.add(jMenuItem1);

		jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_About_32px_1.png"))); // NOI18N
		jMenuItem8.setText("About");
		jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem8ActionPerformed(evt);
			}
		});
		jMenu3.add(jMenuItem8);

		jMenuBar1.add(jMenu3);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap(20, Short.MAX_VALUE)
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGap(20, 20, 20)
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(34, Short.MAX_VALUE))
				.addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				);

		getAccessibleContext().setAccessibleDescription("");

		pack();
		setLocationRelativeTo(null);
	}// </editor-fold>//GEN-END:initComponents

	private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
		HelpWindow x = new HelpWindow();
		x.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		x.setVisible(true);
	}//GEN-LAST:event_jMenuItem1ActionPerformed

	private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
		timer = false;
		checked = true;
		this.dispose();
		resetTimer();
		started = false;
		//checked = false;
		NewGameInput newGame = new NewGameInput();
		newGame.setVisible(true);
	}//GEN-LAST:event_jMenuItem2ActionPerformed


	//Listeners
	@Override
	public void keyPressed(KeyEvent ke) {
		FormattedInputBox inputBox = (FormattedInputBox) ke.getComponent();
		System.out.println(""+inputBox.row+" "+inputBox.col);
		switch(ke.getKeyCode())	{
		// Navigating with arrow keys
		case KeyEvent.VK_UP:
			if(activeRow>0)	activeRow--;	break;
		case KeyEvent.VK_DOWN:
			if(activeRow<NewGameInput.N-1) activeRow++;	break;
		case KeyEvent.VK_LEFT:
			if(activeCol>0)	activeCol--;	break;
		case KeyEvent.VK_RIGHT:
			if(activeCol<NewGameInput.N-1) activeCol++;	break;

		case KeyEvent.VK_DELETE:
		case KeyEvent.VK_BACK_SPACE:
			// Clear the text field if the number is 1 digit or less
			if(inputBox.getText().length() <= 1)
				inputBox.setValue(null);
			break;
		}
		textFields[activeRow][activeCol].requestFocusInWindow();
	}


	public void focusGained(FocusEvent e) {	
		FormattedInputBox box = (FormattedInputBox) e.getComponent();
		box.selectAll();
		box.setBackground(ColorChooser.boxColor.darker());

		if(box.row!=-1 && box.col!=-1){	//Just a safety check
			activeRow = box.row; activeCol = box.col;
		}
	}
	public void focusLost(FocusEvent fe) {
		FormattedInputBox box = (FormattedInputBox) fe.getComponent();
		box.setBackground(ColorChooser.boxColor.brighter());
		//		box.setBackground(Color.WHITE);
	}

	@Override
	public void keyReleased(KeyEvent e) {}
	@Override
	public void keyTyped(KeyEvent e) {}

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		if(!started){
			switch(lifesRemaining){
			case 3:
			{
				jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				break;
			}
			case 2:
			{
				jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Dislike_48px.png")));
				break;
			}
			case 1:

			{
				jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Dislike_48px.png")));
				jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Dislike_48px.png")));
				break;
			}
			case 0:

			{
				jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				lifesRemaining = 3;


				break;
			}
			}
			jPanel3.setVisible(true);
			jLabel4.setText("Status:");
			jLabel4.setForeground(Color.gray);
			jLabel5.setText(" ");
			jLabel5.repaint();
			jLabel4.repaint();
			timer = true;

			startStopwatch();

			for (int i = 0; i < NewGameInput.N; i++)	
				for (int j = 0; j < NewGameInput.N; j++){
					FormattedInputBox box = textFields[i][j];
					box.setEditable(true);
					box.addKeyListener(box);
					box.addFocusListener(this);
					box.addKeyListener(this);
				}
			started=true;
		}
		else if(checked)
		{
			switch(lifesRemaining){
			case 3:
			{
				jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				break;
			}
			case 2:

			{
				jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Dislike_48px.png")));
				break;
			}
			case 1:

			{
				jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Dislike_48px.png")));
				jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Dislike_48px.png")));
				break;
			}
			case 0:

			{
				jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Heart_Outline_48px.png")));
				lifesRemaining = 3;


				break;
			}
			}
			jLabel4.setText("Status:");
			jLabel4.setForeground(Color.gray);
			jLabel5.setText(" ");
			jLabel5.repaint();
			jLabel4.repaint();
			checked = false;
			for (int i = 0; i < NewGameInput.N; i++)	
				for (int j = 0; j < NewGameInput.N; j++) {
					textFields[i][j].setEditable(true);
					textFields[i][j].addKeyListener(textFields[i][j]);
					textFields[i][j].setValue(null);
					resetTimer();
					timer = true;
					startStopwatch();
				}
		}


	}//GEN-LAST:event_jButton2ActionPerformed
	private void resetTimer()
	{
		timePassedInSeconds = 0;
		savedTime = 0;
	}
	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

		if(timer){
			if(parseTextfields()&&!checked)
			{
				if(isMagicSquare(data))
				{
					timer = false;
					jLabel4.setForeground(Color.GREEN);
					jLabel4.setText("Correct");
					jLabel4.repaint();
					lifesRemaining = 3;
					for (int i = 0; i < NewGameInput.N; i++)	
						for (int j = 0; j < NewGameInput.N; j++){
							textFields[i][j].setEditable(false);
							textFields[i][j].removeKeyListener(textFields[i][j]);
							textFields[i][j].addKeyListener(this);
						}

					showBekfast();				    

					checked = true;
					if(name.equalsIgnoreCase("")){
						NameInput in = new NameInput();
						in.setVisible(true);
					}
					else
					{

						if(winnerList.get(winnerList.indexOf(new Winners(name,0,0))).time>timePassedInSeconds)
						{
							jLabel5.setText("Score Updated");
							winnerList.get(winnerList.indexOf(new Winners(name,0,0))).time = timePassedInSeconds;
							Collections.sort(winnerList);
							Winners.saveLeaderBoard();
						}
						else
						{
							jLabel5.setText("Slow");
						}


					}
				}
				else
				{
					switch(lifesRemaining){
					case 3:
					{
						jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Dislike_48px.png")));
						lifesRemaining--;
						break;
					}
					case 2:

					{
						jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Dislike_48px.png")));
						lifesRemaining--;
						break;
					}
					case 1:

					{
						jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8_Dislike_48px.png")));
						lifesRemaining--;
						checked = true;
						timer = false;
						GameOver gameOver = new GameOver();
						gameOver.setVisible(true);
						break;
					}
					}

					jLabel5.setText("");
					jLabel4.setForeground(Color.red);
					jLabel4.setText("Wrong");
					jLabel4.repaint();

				}
			}
			else
			{
				jLabel5.setText("Incomplete Input");


			}
		}
	}//GEN-LAST:event_jButton1ActionPerformed
	public static void showBekfast() {
		ImageIcon icon=new ImageIcon("/javaapplication1/bekfast.jpg");
		JFrame frame=new JFrame();
		frame.setLayout(new FlowLayout());
		frame.setSize(200,300);
		JLabel lbl=new JLabel();
		lbl.setIcon(icon);
		frame.add(lbl);
		frame.setVisible(true);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}

	private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
		LeaderBoard l = new LeaderBoard();
		l.setVisible(true);
	}//GEN-LAST:event_jMenuItem3ActionPerformed

	private void windowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowClosing
		if(started&&lifesRemaining!=0)
		{
			SaveWindow save = new SaveWindow();
			save.setVisible(true);
		}
		else
			System.exit(0);
	}//GEN-LAST:event_windowClosing

	private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed


		MyProgram.systemTheme();
		SwingUtilities.updateComponentTreeUI(this);
	}//GEN-LAST:event_jMenuItem4ActionPerformed

	private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed

		MyProgram.defaultTheme();
		SwingUtilities.updateComponentTreeUI(this);
	}//GEN-LAST:event_jMenuItem5ActionPerformed

	private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
		ColorChooser color = new ColorChooser();
		color.setVisible(true);
	}//GEN-LAST:event_jMenuItem6ActionPerformed

	private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
		MyProgram.restoreTheme();
		SwingUtilities.updateComponentTreeUI(this);
	}//GEN-LAST:event_jMenuItem7ActionPerformed

	private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
		AboutWindow about = new AboutWindow();
		about.setVisible(true);
	}//GEN-LAST:event_jMenuItem8ActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(GameWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(GameWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(GameWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(GameWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new GameWindow().setVisible(true);
			}
		});
	}
	public static boolean parseTextfields()	{
		data = new int[NewGameInput.N][NewGameInput.N];
		for (int i = 0; i < NewGameInput.N; i++) {
			for (int j = 0; j < NewGameInput.N; j++) {
				try {
					String text = textFields[i][j].getText();
					data[i][j] = Integer.parseInt(text);
				} catch(NumberFormatException exception){return false;};
			}
		}
		return true;
	}
	static boolean isMagicSquare( int[][] square)
	{
		for (int r = 0; r < square.length; r++) {
			for (int c = 0; c < square[r].length; c++) {
				// Check for repetition
				int cellCheck = square[r][c], count=0;
				if(cellCheck > 9 || cellCheck < 0) return false;

				for (int i = 0; i < square.length; i++)
					for (int j = 0; j < square[i].length; j++)
						if(square[i][j]==cellCheck)
							count++;
				if(count>1) {
					System.out.println(cellCheck+" repeated "+count+"times");
					return false;
				}
			}
		}

		// check sum of diagonals
		int sumDiag = 0;
		for (int i = 0; i < square.length; i++) {
			sumDiag += square[i][i];
		} if(sumDiag!=15) {
			System.out.println("Bad sumDiag "+sumDiag);
			return false;
		}

		int sumDiag2 = 0;
		for (int i = 0; i < square.length; i++) {
			sumDiag2 += square[i][square.length-i-1];
		} if(sumDiag2!=15) {
			System.out.println("Bad sumDiag2 "+sumDiag2);
			return false;
		}
		// Check sum of rows
		for (int i = 0; i < square.length; i++) {
			int sumRow = 0;
			for (int j = 0; j < square[i].length; j++) {
				sumRow += square[i][j];
			} if(sumRow!=15) {
				System.out.println("Bad sumRow "+sumRow);
				return false;
			}
		}
		// Check sum of columns
		for (int i = 0; i < square.length; i++) {
			int sumCol = 0;
			for (int j = 0; j < square[i].length; j++) {
				sumCol += square[j][i];
			} if(sumCol!=15) {
				System.out.println("Bad sumCol "+sumCol);
				return false;
			}
		}
		return true;
	}
	public static void updateWinners(Winners w){

		winnerList.add(w);
		Collections.sort(winnerList);
	}
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	public static javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JMenu jMenu1;
	private javax.swing.JMenu jMenu2;
	private javax.swing.JMenu jMenu3;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JMenuItem jMenuItem1;
	private javax.swing.JMenuItem jMenuItem2;
	private javax.swing.JMenuItem jMenuItem3;
	private javax.swing.JMenuItem jMenuItem4;
	private javax.swing.JMenuItem jMenuItem5;
	private javax.swing.JMenuItem jMenuItem6;
	private javax.swing.JMenuItem jMenuItem7;
	private javax.swing.JMenuItem jMenuItem8;
	public static javax.swing.JPanel jPanel1;
	protected static javax.swing.JPanel jPanel2;
	protected static javax.swing.JPanel jPanel3;
	// End of variables declaration//GEN-END:variables

}

